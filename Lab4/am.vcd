$date
	Sat Feb 20 15:37:29 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module arith_machine_test $end
$var wire 1 ! except $end
$var reg 1 " clock $end
$var reg 1 # done $end
$var reg 1 $ reset $end
$var integer 32 % i [31:0] $end
$scope module am $end
$var wire 1 " clock $end
$var wire 1 $ reset $end
$var wire 32 & zero_ex [31:0] $end
$var wire 1 ' writeenable $end
$var wire 32 ( sign_ex [31:0] $end
$var wire 1 ) rd_src $end
$var wire 32 * nextPC [31:0] $end
$var wire 32 + inst [31:0] $end
$var wire 1 ! except $end
$var wire 2 , alu_src2 [1:0] $end
$var wire 3 - alu_op [2:0] $end
$var wire 32 . W_data [31:0] $end
$var wire 5 / W_addr [4:0] $end
$var wire 32 0 PC [31:0] $end
$var wire 32 1 B_wire [31:0] $end
$var wire 32 2 B_data [31:0] $end
$var wire 32 3 A_data [31:0] $end
$scope module PC_reg $end
$var wire 1 " clock $end
$var wire 1 4 enable $end
$var wire 1 $ reset $end
$var wire 32 5 d [31:0] $end
$var reg 32 6 q [31:0] $end
$upscope $end
$scope module alu_beeg $end
$var wire 1 7 negative $end
$var wire 32 8 out [31:0] $end
$var wire 1 9 overflow $end
$var wire 1 : zero $end
$var wire 32 ; inB [31:0] $end
$var wire 32 < inA [31:0] $end
$var wire 3 = control [2:0] $end
$upscope $end
$scope module im $end
$var wire 30 > addr [29:0] $end
$var wire 32 ? data [31:0] $end
$var reg 32 @ i [31:0] $end
$upscope $end
$scope module mips1 $end
$var wire 1 ! except $end
$var wire 6 A funct [5:0] $end
$var wire 6 B opcode [5:0] $end
$var wire 1 ) rd_src $end
$var wire 1 C w_add $end
$var wire 1 D w_and $end
$var wire 1 E w_nor $end
$var wire 1 F w_or $end
$var wire 1 G w_sub $end
$var wire 1 H w_xor $end
$var wire 1 ' writeenable $end
$var wire 1 I w_xori $end
$var wire 1 J w_ori $end
$var wire 1 K w_op0 $end
$var wire 1 L w_andi $end
$var wire 1 M w_addi $end
$var wire 2 N alu_src2 [1:0] $end
$var wire 3 O alu_op [2:0] $end
$upscope $end
$scope module mux_big $end
$var wire 32 P B [31:0] $end
$var wire 32 Q C [31:0] $end
$var wire 2 R sel [1:0] $end
$var wire 32 S wAB [31:0] $end
$var wire 32 T out [31:0] $end
$var wire 32 U A [31:0] $end
$scope module mAB $end
$var wire 32 V B [31:0] $end
$var wire 32 W out [31:0] $end
$var wire 1 X sel $end
$var wire 32 Y temp1 [31:0] $end
$var wire 32 Z temp2 [31:0] $end
$var wire 32 [ A [31:0] $end
$upscope $end
$scope module mfinal $end
$var wire 32 \ A [31:0] $end
$var wire 32 ] B [31:0] $end
$var wire 32 ^ out [31:0] $end
$var wire 1 _ sel $end
$var wire 32 ` temp1 [31:0] $end
$var wire 32 a temp2 [31:0] $end
$upscope $end
$upscope $end
$scope module mux_small $end
$var wire 5 b A [4:0] $end
$var wire 5 c B [4:0] $end
$var wire 5 d out [4:0] $end
$var wire 1 ) sel $end
$var wire 5 e temp1 [4:0] $end
$var wire 5 f temp2 [4:0] $end
$upscope $end
$scope module pcplus4 $end
$var wire 3 g control [2:0] $end
$var wire 32 h inA [31:0] $end
$var wire 32 i inB [31:0] $end
$var wire 1 j negative $end
$var wire 32 k out [31:0] $end
$var wire 1 l overflow $end
$var wire 1 m zero $end
$upscope $end
$scope module rf $end
$var wire 1 " clock $end
$var wire 32 n rdData [31:0] $end
$var wire 5 o rdNum [4:0] $end
$var wire 1 ' rdWriteEnable $end
$var wire 1 $ reset $end
$var wire 32 p rsData [31:0] $end
$var wire 5 q rsNum [4:0] $end
$var wire 32 r rtData [31:0] $end
$var wire 5 s rtNum [4:0] $end
$var integer 32 t i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 u \r[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 v \r[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 w \r[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 x \r[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 y \r[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 z \r[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 { \r[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 | \r[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 } \r[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 ~ \r[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 !" \r[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 "" \r[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 #" \r[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 $" \r[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 %" \r[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 &" \r[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 '" \r[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 (" \r[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 )" \r[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 *" \r[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 +" \r[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 ," \r[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 -" \r[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 ." \r[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 /" \r[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 0" \r[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 1" \r[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 2" \r[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 3" \r[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 4" \r[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 5" \r[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 6" \r[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b100000 t
b110 s
b0 r
b0 q
b0 p
b110 o
b1100100 n
0m
0l
b100 k
0j
b100 i
b0 h
b10 g
b110 f
b0 e
b110 d
b110 c
b0 b
b0 a
b1100100 `
0_
b1100100 ^
b1100100 ]
b1100100 \
b0 [
b1100100 Z
b0 Y
1X
b1100100 W
b1100100 V
b0 U
b1100100 T
b1100100 S
b1 R
b1100100 Q
b1100100 P
b10 O
b1 N
1M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
b1000 B
b100100 A
b100000000 @
b100000000001100000000001100100 ?
b0 >
b10 =
b0 <
b1100100 ;
0:
09
b1100100 8
07
b0 6
b100 5
14
b0 3
b0 2
b1100100 1
b0 0
b110 /
b1100100 .
b10 -
b1 ,
b100000000001100000000001100100 +
b100 *
1)
b1100100 (
1'
b1100100 &
b100000 %
1$
0#
0"
0!
$end
#3
0$
#5
b10011011 1
b10011011 ;
b10011011 T
b10011011 ^
b11111111 .
b11111111 8
b11111111 n
b10011011 `
b111 /
b111 d
b111 o
b10011011 S
b10011011 W
b10011011 \
b111 f
b10011011 Z
b1000 *
b1000 5
b1000 k
b111 c
b111 s
b1100100 3
b1100100 <
b1100100 p
b110 q
b11011 A
b10011011 &
b10011011 Q
b10011011 ]
b10011011 (
b10011011 P
b10011011 V
b100000110001110000000010011011 +
b100000110001110000000010011011 ?
b1 >
b100 0
b100 6
b100 h
b1100100 {
b0 2
b0 U
b0 [
b0 r
1"
#10
0"
#15
0:
b11001000 .
b11001000 8
b11001000 n
b1000 e
b1100100 1
b1100100 ;
b1100100 T
b1100100 ^
0)
1'
b1100100 `
b1000 /
b1000 d
b1000 o
0!
b10 -
b10 =
b10 O
b1100100 S
b1100100 W
b1100100 \
b0 f
b1100100 Y
1C
0X
b0 Z
b1100 *
b1100 5
b1100 k
b110 c
b1000 b
b110 s
b100000 A
1K
b0 ,
b0 N
b0 R
0M
b0 B
b100000000100000 &
b100000000100000 Q
b100000000100000 ]
b100000000100000 (
b100000000100000 P
b100000000100000 V
b110001100100000000100000 +
b110001100100000000100000 ?
b10 >
b11111111 |
b1100100 2
b1100100 U
b1100100 [
b1100100 r
b1000 0
b1000 6
b1000 h
1"
#20
0"
#25
b11 -
b11 =
b11 O
b11001000 1
b11001000 ;
b11001000 T
b11001000 ^
b11001000 `
b110111 .
b110111 8
b110111 n
b1001 /
b1001 d
b1001 o
b11001000 S
b11001000 W
b11001000 \
b1001 e
b11001000 Y
0C
1G
b10000 *
b10000 5
b10000 k
b1000 c
b1001 b
b11001000 2
b11001000 U
b11001000 [
b11001000 r
b1000 s
b11111111 3
b11111111 <
b11111111 p
b111 q
b100010 A
b100100000100010 &
b100100000100010 Q
b100100000100010 ]
b100100000100010 (
b100100000100010 P
b100100000100010 V
b111010000100100000100010 +
b111010000100100000100010 ?
b11 >
b1100 0
b1100 6
b1100 h
b11001000 }
1"
#30
0"
#35
17
0:
b11111111 1
b11111111 ;
b11111111 T
b11111111 ^
b11111111 `
b1010 /
b1010 d
b1010 o
b11111111 S
b11111111 W
b11111111 \
b11111111111111111111111111001001 .
b11111111111111111111111111001001 8
b11111111111111111111111111001001 n
b1010 e
b11111111 Y
b10100 *
b10100 5
b10100 k
b111 c
b1010 b
b11111111 2
b11111111 U
b11111111 [
b11111111 r
b111 s
b11001000 3
b11001000 <
b11001000 p
b1000 q
b101000000100010 &
b101000000100010 Q
b101000000100010 ]
b101000000100010 (
b101000000100010 P
b101000000100010 V
b1000001110101000000100010 +
b1000001110101000000100010 ?
b100 >
b110111 ~
b10000 0
b10000 6
b10000 h
1"
#40
0"
#45
07
b100101100 .
b100101100 8
b100101100 n
b10 -
b10 =
b10 O
b1100100 1
b1100100 ;
b1100100 T
b1100100 ^
b1100100 `
b1011 /
b1011 d
b1011 o
b1100100 S
b1100100 W
b1100100 \
b1011 e
b1100100 Y
1C
0G
b11000 *
b11000 5
b11000 k
b110 c
b1011 b
b1100100 2
b1100100 U
b1100100 [
b1100100 r
b110 s
b100000 A
b101100000100000 &
b101100000100000 Q
b101100000100000 ]
b101100000100000 (
b101100000100000 P
b101100000100000 V
b1000001100101100000100000 +
b1000001100101100000100000 ?
b101 >
b10100 0
b10100 6
b10100 h
b11111111111111111111111111001001 !"
1"
#50
0"
#55
0:
b100 -
b100 =
b100 O
b11111111 1
b11111111 ;
b11111111 T
b11111111 ^
b11111111 `
b101100 .
b101100 8
b101100 n
b1100 /
b1100 d
b1100 o
b11111111 S
b11111111 W
b11111111 \
b1100 e
b11111111 Y
0C
1D
b11100 *
b11100 5
b11100 k
b111 c
b1100 b
b11111111 2
b11111111 U
b11111111 [
b11111111 r
b111 s
b100101100 3
b100101100 <
b100101100 p
b1011 q
b100100 A
b110000000100100 &
b110000000100100 Q
b110000000100100 ]
b110000000100100 (
b110000000100100 P
b110000000100100 V
b1011001110110000000100100 +
b1011001110110000000100100 ?
b110 >
b100101100 ""
b11000 0
b11000 6
b11000 h
1"
#60
0"
#65
17
b11111111111111111111111111111111 .
b11111111111111111111111111111111 8
b11111111111111111111111111111111 n
b101 -
b101 =
b101 O
b1101 /
b1101 d
b1101 o
b1101 e
0D
1F
b100000 *
b100000 5
b100000 k
b1101 b
b11111111111111111111111111001001 3
b11111111111111111111111111001001 <
b11111111111111111111111111001001 p
b1010 q
b100101 A
b110100000100101 &
b110100000100101 Q
b110100000100101 ]
b110100000100101 (
b110100000100101 P
b110100000100101 V
b1010001110110100000100101 +
b1010001110110100000100101 ?
b111 >
b11100 0
b11100 6
b11100 h
b101100 #"
1"
#70
0"
#75
0:
07
b101010110101010 .
b101010110101010 8
b101010110101010 n
b101010101010101 1
b101010101010101 ;
b101010101010101 T
b101010101010101 ^
b0 `
b101010101010101 a
b1110 /
b1110 d
b1110 o
b0 S
b0 W
b0 \
1_
b1110 f
b0 e
b0 Y
0F
1)
b10 ,
b10 N
b10 R
b111 -
b111 =
b111 O
b100100 *
b100100 5
b100100 k
b1110 c
b1010 b
b0 2
b0 U
b0 [
b0 r
b1110 s
b11111111 3
b11111111 <
b11111111 p
b111 q
b10101 A
0K
1I
b1110 B
b101010101010101 &
b101010101010101 Q
b101010101010101 ]
b101010101010101 (
b101010101010101 P
b101010101010101 V
b111000111011100101010101010101 +
b111000111011100101010101010101 ?
b1000 >
b11111111111111111111111111111111 $"
b100000 0
b100000 6
b100000 h
1"
#80
0"
#85
0:
b100000000 .
b100000000 8
b100000000 n
b11111111111111111111111111111111 `
1'
b1111 /
b1111 d
b1111 o
0_
0!
b11111111111111111111111111111111 1
b11111111111111111111111111111111 ;
b11111111111111111111111111111111 T
b11111111111111111111111111111111 ^
b0 f
b1111 e
1G
0)
b0 ,
b0 N
b0 R
b11 -
b11 =
b11 O
b0 a
b101000 *
b101000 5
b101000 k
b1101 c
b1111 b
b1101 s
b100010 A
1K
0I
b0 B
b111100000100010 &
b111100000100010 Q
b111100000100010 ]
b111100000100010 (
b111100000100010 P
b111100000100010 V
b111011010111100000100010 +
b111011010111100000100010 ?
b11111111111111111111111111111111 S
b11111111111111111111111111111111 W
b11111111111111111111111111111111 \
b1001 >
b11111111111111111111111111111111 Y
b100100 0
b100100 6
b100100 h
b101010110101010 %"
b11111111111111111111111111111111 2
b11111111111111111111111111111111 U
b11111111111111111111111111111111 [
b11111111111111111111111111111111 r
1"
#90
0"
#95
b10 -
b10 =
b10 O
b10000 /
b10000 d
b10000 o
b1100011 .
b1100011 8
b1100011 n
b10000 e
1C
0G
b101100 *
b101100 5
b101100 k
b10000 b
b1100100 3
b1100100 <
b1100100 p
b110 q
b100000 A
b1000000000100000 &
b1000000000100000 Q
b1000000000100000 ]
b11111111111111111000000000100000 (
b11111111111111111000000000100000 P
b11111111111111111000000000100000 V
b110011011000000000100000 +
b110011011000000000100000 ?
b1010 >
b100000000 &"
b101000 0
b101000 6
b101000 h
1"
#100
0"
#105
17
b110 -
b110 =
b110 O
b11111111 1
b11111111 ;
b11111111 T
b11111111 ^
b11111111 `
b11111111111111111111111000000000 .
b11111111111111111111111000000000 8
b11111111111111111111111000000000 n
b10001 /
b10001 d
b10001 o
b11111111 S
b11111111 W
b11111111 \
b10001 e
b11111111 Y
0C
1E
b110000 *
b110000 5
b110000 k
b111 c
b10001 b
b11111111 2
b11111111 U
b11111111 [
b11111111 r
b111 s
b100000000 3
b100000000 <
b100000000 p
b1111 q
b100111 A
b1000100000100111 &
b1000100000100111 Q
b1000100000100111 ]
b11111111111111111000100000100111 (
b11111111111111111000100000100111 P
b11111111111111111000100000100111 V
b1111001111000100000100111 +
b1111001111000100000100111 ?
b1011 >
b101100 0
b101100 6
b101100 h
b1100011 '"
1"
#110
0"
#115
0:
17
b11111111111111111111111100000000 .
b11111111111111111111111100000000 8
b11111111111111111111111100000000 n
b100000000 1
b100000000 ;
b100000000 T
b100000000 ^
b10 -
b10 =
b10 O
b100000000 `
b10010 /
b10010 d
b10010 o
b100000000 S
b100000000 W
b100000000 \
b10010 e
b100000000 Y
1C
0E
b110100 *
b110100 5
b110100 k
b1111 c
b10010 b
b100000000 2
b100000000 U
b100000000 [
b100000000 r
b1111 s
b11111111111111111111111000000000 3
b11111111111111111111111000000000 <
b11111111111111111111111000000000 p
b10001 q
b100000 A
b1001000000100000 &
b1001000000100000 Q
b1001000000100000 ]
b11111111111111111001000000100000 (
b11111111111111111001000000100000 P
b11111111111111111001000000100000 V
b10001011111001000000100000 +
b10001011111001000000100000 ?
b1100 >
b11111111111111111111111000000000 ("
b110000 0
b110000 6
b110000 h
1"
#120
0"
#125
0:
07
b1010101010101010 1
b1010101010101010 ;
b1010101010101010 T
b1010101010101010 ^
b1010101010101010 a
b0 `
b1010101011111111 .
b1010101011111111 8
b1010101011111111 n
b10011 f
1_
b10011 /
b10011 d
b10011 o
b0 S
b0 W
b0 \
1)
b10 ,
b10 N
b10 R
b0 e
b0 Y
0C
b101 -
b101 =
b101 O
b111000 *
b111000 5
b111000 k
b10011 c
b10101 b
b0 2
b0 U
b0 [
b0 r
b10011 s
b11111111 3
b11111111 <
b11111111 p
b111 q
b101010 A
0K
1J
b1101 B
b1010101010101010 &
b1010101010101010 Q
b1010101010101010 ]
b11111111111111111010101010101010 (
b11111111111111111010101010101010 P
b11111111111111111010101010101010 V
b110100111100111010101010101010 +
b110100111100111010101010101010 ?
b1101 >
b110100 0
b110100 6
b110100 h
b11111111111111111111111100000000 )"
1"
#130
0"
#135
1:
b0 .
b0 8
b0 n
0_
0'
b0 /
b0 d
b0 o
0)
b0 ,
b0 N
b0 R
1!
b0 1
b0 ;
b0 T
b0 ^
b0 f
b0 -
b0 =
b0 O
b0 a
b111100 *
b111100 5
b111100 k
b0 c
b0 b
b0 s
b0 3
b0 <
b0 p
b0 q
b0 A
1K
0J
b0 B
b0 &
b0 Q
b0 ]
b0 (
b0 P
b0 V
b0 S
b0 W
b0 \
b0 +
b0 ?
b0 Y
b1110 >
b1010101011111111 *"
b0 2
b0 U
b0 [
b0 r
b111000 0
b111000 6
b111000 h
1"
#140
b100000 %
0"
