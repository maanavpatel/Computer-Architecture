$date
	Sat Feb 20 15:36:30 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module decoder_test $end
$var wire 1 ! writeenable $end
$var wire 1 " rd_src $end
$var wire 1 # except $end
$var wire 2 $ alu_src2 [1:0] $end
$var wire 3 % alu_op [2:0] $end
$var reg 6 & funct [5:0] $end
$var reg 6 ' opcode [5:0] $end
$scope module decoder $end
$var wire 1 # except $end
$var wire 6 ( funct [5:0] $end
$var wire 6 ) opcode [5:0] $end
$var wire 1 " rd_src $end
$var wire 1 * w_add $end
$var wire 1 + w_and $end
$var wire 1 , w_nor $end
$var wire 1 - w_or $end
$var wire 1 . w_sub $end
$var wire 1 / w_xor $end
$var wire 1 ! writeenable $end
$var wire 1 0 w_xori $end
$var wire 1 1 w_ori $end
$var wire 1 2 w_op0 $end
$var wire 1 3 w_andi $end
$var wire 1 4 w_addi $end
$var wire 2 5 alu_src2 [1:0] $end
$var wire 3 6 alu_op [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 6
b0 5
04
03
12
01
00
0/
0.
0-
0,
0+
1*
b0 )
b100000 (
b0 '
b100000 &
b10 %
b0 $
0#
0"
1!
$end
#10
b11 %
b11 6
0*
1.
b100010 &
b100010 (
#20
b101 %
b101 6
0.
1-
b100101 &
b100101 (
#30
b111 %
b111 6
0-
1/
b100110 &
b100110 (
#40
b110 %
b110 6
1,
0/
b100111 &
b100111 (
#50
b10 %
b10 6
1"
0,
02
b1 $
b1 5
14
b1000 '
b1000 )
#60
b100 %
b100 6
b10 $
b10 5
04
13
b1100 '
b1100 )
#70
b101 %
b101 6
03
11
b1101 '
b1101 )
#80
b111 %
b111 6
01
10
b1110 '
b1110 )
#90
0!
1#
0"
b0 $
b0 5
b0 %
b0 6
b100000 &
b100000 (
00
b101010 '
b101010 )
#100
b100010 &
b100010 (
b110111 '
b110111 )
#110
b100100 &
b100100 (
#120
